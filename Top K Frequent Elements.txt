
347. Top K Frequent Elements

Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.

 

Example 1:

Input: nums = [1,1,1,2,2,3], k = 2
Output: [1,2]
Example 2:

Input: nums = [1], k = 1
Output: [1]

Solution: Java


class Solution {
    public int[] topKFrequent(int[] nums, int k) {
     List<Integer>[] bucket = new List[nums.length + 1];
	 HashMap<Integer, Integer> hm = new HashMap<>();

	for (int i =0; i< nums.length; i++) 
		hm.put(nums[i], hm.getOrDefault(nums[i], 0) + 1);
	

	for (int key : hm.keySet()) {
		int frequency = hm.get(key);
		if (bucket[frequency] == null) {
			bucket[frequency] = new ArrayList<>();
		}
		bucket[frequency].add(key);
	}

    int ans[] = new int[k];
    int count = 0;
    for (int i = bucket.length - 1; i >= 0 ; i--) {
		if (bucket[i] != null) {
			for(int j =0; j <bucket[i].size(); j++)
              ans[count++] = bucket[i].get(j);
		}
        if(count == k) break;
   	}
              
        return ans;
    }
}
